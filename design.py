# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.12.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_HandGestureRecognitionSystem(object):
    def setupUi(self, HandGestureRecognitionSystem):
        HandGestureRecognitionSystem.setObjectName("HandGestureRecognitionSystem")
        HandGestureRecognitionSystem.resize(824, 709)
        self.centralwidget = QtWidgets.QWidget(HandGestureRecognitionSystem)
        self.centralwidget.setObjectName("centralwidget")
        self.startButton = QtWidgets.QPushButton(self.centralwidget)
        self.startButton.setGeometry(QtCore.QRect(410, 520, 191, 31))
        self.startButton.setObjectName("startButton")
        self.startDetection = QtWidgets.QPushButton(self.centralwidget)
        self.startDetection.setGeometry(QtCore.QRect(0, 120, 241, 51))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.startDetection.setFont(font)
        self.startDetection.setStyleSheet("background-color: rgb(136, 255, 0);")
        self.startDetection.setObjectName("startDetection")
        self.startDetection_2 = QtWidgets.QPushButton(self.centralwidget)
        self.startDetection_2.setGeometry(QtCore.QRect(220, 410, 131, 41))
        self.startDetection_2.setObjectName("startDetection_2")
        self.mode_detection = QtWidgets.QGroupBox(self.centralwidget)
        self.mode_detection.setGeometry(QtCore.QRect(0, 10, 241, 101))
        self.mode_detection.setObjectName("mode_detection")
        self.rb_ip_cam = QtWidgets.QRadioButton(self.mode_detection)
        self.rb_ip_cam.setGeometry(QtCore.QRect(10, 40, 111, 17))
        self.rb_ip_cam.setChecked(False)
        self.rb_ip_cam.setObjectName("rb_ip_cam")
        self.address_cam = QtWidgets.QTextEdit(self.mode_detection)
        self.address_cam.setEnabled(False)
        self.address_cam.setGeometry(QtCore.QRect(10, 60, 221, 31))
        self.address_cam.setObjectName("address_cam")
        self.rb_def_cam = QtWidgets.QRadioButton(self.mode_detection)
        self.rb_def_cam.setGeometry(QtCore.QRect(10, 20, 111, 17))
        self.rb_def_cam.setChecked(True)
        self.rb_def_cam.setObjectName("rb_def_cam")
        self.settings_detection_gb = QtWidgets.QGroupBox(self.centralwidget)
        self.settings_detection_gb.setGeometry(QtCore.QRect(250, 10, 281, 301))
        self.settings_detection_gb.setObjectName("settings_detection_gb")
        self.cnt_hand_lbl = QtWidgets.QLabel(self.settings_detection_gb)
        self.cnt_hand_lbl.setGeometry(QtCore.QRect(10, 90, 251, 31))
        self.cnt_hand_lbl.setWordWrap(True)
        self.cnt_hand_lbl.setObjectName("cnt_hand_lbl")
        self.countHandsCB = QtWidgets.QComboBox(self.settings_detection_gb)
        self.countHandsCB.setGeometry(QtCore.QRect(10, 130, 251, 22))
        self.countHandsCB.setObjectName("countHandsCB")
        self.trsh_segm_sldr = QtWidgets.QSlider(self.settings_detection_gb)
        self.trsh_segm_sldr.setGeometry(QtCore.QRect(10, 200, 221, 22))
        self.trsh_segm_sldr.setMinimum(1)
        self.trsh_segm_sldr.setProperty("value", 27)
        self.trsh_segm_sldr.setOrientation(QtCore.Qt.Horizontal)
        self.trsh_segm_sldr.setObjectName("trsh_segm_sldr")
        self.thr_lbl_segm = QtWidgets.QLabel(self.settings_detection_gb)
        self.thr_lbl_segm.setGeometry(QtCore.QRect(10, 160, 251, 31))
        self.thr_lbl_segm.setLineWidth(1)
        self.thr_lbl_segm.setWordWrap(True)
        self.thr_lbl_segm.setObjectName("thr_lbl_segm")
        self.thr_lbl_class = QtWidgets.QLabel(self.settings_detection_gb)
        self.thr_lbl_class.setGeometry(QtCore.QRect(10, 230, 251, 31))
        self.thr_lbl_class.setLineWidth(1)
        self.thr_lbl_class.setWordWrap(True)
        self.thr_lbl_class.setObjectName("thr_lbl_class")
        self.trsh_class_sldr = QtWidgets.QSlider(self.settings_detection_gb)
        self.trsh_class_sldr.setGeometry(QtCore.QRect(10, 270, 221, 22))
        self.trsh_class_sldr.setMinimum(1)
        self.trsh_class_sldr.setProperty("value", 27)
        self.trsh_class_sldr.setOrientation(QtCore.Qt.Horizontal)
        self.trsh_class_sldr.setObjectName("trsh_class_sldr")
        self.ver_segm_lbl = QtWidgets.QLabel(self.settings_detection_gb)
        self.ver_segm_lbl.setGeometry(QtCore.QRect(10, 20, 251, 31))
        self.ver_segm_lbl.setWordWrap(True)
        self.ver_segm_lbl.setObjectName("ver_segm_lbl")
        self.rb_segm_1 = QtWidgets.QRadioButton(self.settings_detection_gb)
        self.rb_segm_1.setGeometry(QtCore.QRect(10, 50, 251, 17))
        self.rb_segm_1.setChecked(True)
        self.rb_segm_1.setObjectName("rb_segm_1")
        self.rb_segm_2 = QtWidgets.QRadioButton(self.settings_detection_gb)
        self.rb_segm_2.setGeometry(QtCore.QRect(10, 70, 241, 17))
        self.rb_segm_2.setChecked(False)
        self.rb_segm_2.setObjectName("rb_segm_2")
        self.thr_lbl_segm_val = QtWidgets.QLabel(self.settings_detection_gb)
        self.thr_lbl_segm_val.setGeometry(QtCore.QRect(240, 190, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.thr_lbl_segm_val.setFont(font)
        self.thr_lbl_segm_val.setLineWidth(1)
        self.thr_lbl_segm_val.setWordWrap(True)
        self.thr_lbl_segm_val.setObjectName("thr_lbl_segm_val")
        self.thr_lbl_class_val = QtWidgets.QLabel(self.settings_detection_gb)
        self.thr_lbl_class_val.setGeometry(QtCore.QRect(240, 260, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.thr_lbl_class_val.setFont(font)
        self.thr_lbl_class_val.setLineWidth(1)
        self.thr_lbl_class_val.setWordWrap(True)
        self.thr_lbl_class_val.setObjectName("thr_lbl_class_val")
        self.send_json_group = QtWidgets.QGroupBox(self.centralwidget)
        self.send_json_group.setGeometry(QtCore.QRect(540, 10, 241, 141))
        self.send_json_group.setObjectName("send_json_group")
        self.cb_json = QtWidgets.QCheckBox(self.send_json_group)
        self.cb_json.setGeometry(QtCore.QRect(10, 20, 161, 17))
        self.cb_json.setChecked(True)
        self.cb_json.setObjectName("cb_json")
        self.ip_host = QtWidgets.QTextEdit(self.send_json_group)
        self.ip_host.setEnabled(True)
        self.ip_host.setGeometry(QtCore.QRect(70, 50, 161, 31))
        self.ip_host.setObjectName("ip_host")
        self.port_host = QtWidgets.QTextEdit(self.send_json_group)
        self.port_host.setEnabled(True)
        self.port_host.setGeometry(QtCore.QRect(70, 100, 161, 31))
        self.port_host.setObjectName("port_host")
        self.ver_segm_lbl_2 = QtWidgets.QLabel(self.send_json_group)
        self.ver_segm_lbl_2.setGeometry(QtCore.QRect(20, 50, 61, 31))
        self.ver_segm_lbl_2.setWordWrap(True)
        self.ver_segm_lbl_2.setObjectName("ver_segm_lbl_2")
        self.ver_segm_lbl_3 = QtWidgets.QLabel(self.send_json_group)
        self.ver_segm_lbl_3.setGeometry(QtCore.QRect(20, 100, 71, 31))
        self.ver_segm_lbl_3.setWordWrap(True)
        self.ver_segm_lbl_3.setObjectName("ver_segm_lbl_3")
        self.startDetection_5 = QtWidgets.QPushButton(self.centralwidget)
        self.startDetection_5.setGeometry(QtCore.QRect(540, 160, 241, 41))
        self.startDetection_5.setObjectName("startDetection_5")
        self.sett_class_cnn = QtWidgets.QPushButton(self.centralwidget)
        self.sett_class_cnn.setGeometry(QtCore.QRect(10, 320, 441, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.sett_class_cnn.setFont(font)
        self.sett_class_cnn.setObjectName("sett_class_cnn")
        self.cb_json_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.cb_json_2.setGeometry(QtCore.QRect(620, 530, 161, 17))
        self.cb_json_2.setChecked(True)
        self.cb_json_2.setObjectName("cb_json_2")
        self.countHandsCB_2 = QtWidgets.QComboBox(self.centralwidget)
        self.countHandsCB_2.setGeometry(QtCore.QRect(20, 520, 251, 22))
        self.countHandsCB_2.setObjectName("countHandsCB_2")
        self.thr_lbl_segm_2 = QtWidgets.QLabel(self.centralwidget)
        self.thr_lbl_segm_2.setGeometry(QtCore.QRect(30, 480, 131, 31))
        self.thr_lbl_segm_2.setLineWidth(1)
        self.thr_lbl_segm_2.setWordWrap(True)
        self.thr_lbl_segm_2.setObjectName("thr_lbl_segm_2")
        self.startDetection_3 = QtWidgets.QPushButton(self.centralwidget)
        self.startDetection_3.setGeometry(QtCore.QRect(10, 370, 501, 41))
        self.startDetection_3.setObjectName("startDetection_3")
        self.thr_lbl_segm_3 = QtWidgets.QLabel(self.centralwidget)
        self.thr_lbl_segm_3.setGeometry(QtCore.QRect(510, 200, 281, 131))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.thr_lbl_segm_3.setFont(font)
        self.thr_lbl_segm_3.setLineWidth(1)
        self.thr_lbl_segm_3.setWordWrap(True)
        self.thr_lbl_segm_3.setObjectName("thr_lbl_segm_3")
        self.thr_lbl_segm_4 = QtWidgets.QLabel(self.centralwidget)
        self.thr_lbl_segm_4.setGeometry(QtCore.QRect(0, 180, 231, 121))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.thr_lbl_segm_4.setFont(font)
        self.thr_lbl_segm_4.setLineWidth(1)
        self.thr_lbl_segm_4.setWordWrap(True)
        self.thr_lbl_segm_4.setObjectName("thr_lbl_segm_4")
        self.open_list_gestures = QtWidgets.QPushButton(self.centralwidget)
        self.open_list_gestures.setGeometry(QtCore.QRect(630, 330, 151, 41))
        self.open_list_gestures.setObjectName("open_list_gestures")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(120, 570, 171, 91))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.startDetection_4 = QtWidgets.QPushButton(self.centralwidget)
        self.startDetection_4.setGeometry(QtCore.QRect(480, 440, 131, 41))
        self.startDetection_4.setObjectName("startDetection_4")
        HandGestureRecognitionSystem.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(HandGestureRecognitionSystem)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 824, 21))
        self.menubar.setObjectName("menubar")
        HandGestureRecognitionSystem.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(HandGestureRecognitionSystem)
        self.statusbar.setObjectName("statusbar")
        HandGestureRecognitionSystem.setStatusBar(self.statusbar)

        self.retranslateUi(HandGestureRecognitionSystem)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(HandGestureRecognitionSystem)

    def retranslateUi(self, HandGestureRecognitionSystem):
        _translate = QtCore.QCoreApplication.translate
        HandGestureRecognitionSystem.setWindowTitle(_translate("HandGestureRecognitionSystem", "Система распознавания жестов руки"))
        self.startButton.setText(_translate("HandGestureRecognitionSystem", "Включить делати классификации"))
        self.startDetection.setText(_translate("HandGestureRecognitionSystem", "Включить отслеживание"))
        self.startDetection_2.setText(_translate("HandGestureRecognitionSystem", "Открыть мониторинг"))
        self.mode_detection.setTitle(_translate("HandGestureRecognitionSystem", "Режим отслеживания"))
        self.rb_ip_cam.setText(_translate("HandGestureRecognitionSystem", "IP Камера"))
        self.address_cam.setHtml(_translate("HandGestureRecognitionSystem", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">http://192.168.0.84:8080/video</p></body></html>"))
        self.rb_def_cam.setText(_translate("HandGestureRecognitionSystem", "Обычная камера"))
        self.settings_detection_gb.setTitle(_translate("HandGestureRecognitionSystem", "Настройки отслеживания"))
        self.cnt_hand_lbl.setText(_translate("HandGestureRecognitionSystem", "Максимально отслеживаемое количество рук:"))
        self.thr_lbl_segm.setText(_translate("HandGestureRecognitionSystem", "Порог чувствительности сегментирующей нейронной сети:"))
        self.thr_lbl_class.setText(_translate("HandGestureRecognitionSystem", "Порог чувствительности классифицирующей нейронной сети:"))
        self.ver_segm_lbl.setText(_translate("HandGestureRecognitionSystem", "Версия сегментирующей нейронной сети:"))
        self.rb_segm_1.setText(_translate("HandGestureRecognitionSystem", "1 (Хуже сегментирует, меньше  ошибок)"))
        self.rb_segm_2.setText(_translate("HandGestureRecognitionSystem", "2 (Точнее сегментирует, больше ошибок)"))
        self.thr_lbl_segm_val.setText(_translate("HandGestureRecognitionSystem", "0.27"))
        self.thr_lbl_class_val.setText(_translate("HandGestureRecognitionSystem", "0.27"))
        self.send_json_group.setTitle(_translate("HandGestureRecognitionSystem", "Передача данных стороннему ПО (UDP)"))
        self.cb_json.setText(_translate("HandGestureRecognitionSystem", "Передавать JSON (UTF-8)"))
        self.ip_host.setHtml(_translate("HandGestureRecognitionSystem", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">127.0.0.1</p></body></html>"))
        self.port_host.setHtml(_translate("HandGestureRecognitionSystem", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">9876</p></body></html>"))
        self.ver_segm_lbl_2.setText(_translate("HandGestureRecognitionSystem", "IP Адрес"))
        self.ver_segm_lbl_3.setText(_translate("HandGestureRecognitionSystem", "Port"))
        self.startDetection_5.setText(_translate("HandGestureRecognitionSystem", "Сбросить все настройки"))
        self.sett_class_cnn.setText(_translate("HandGestureRecognitionSystem", "Редактирование классифицирующей NN"))
        self.cb_json_2.setText(_translate("HandGestureRecognitionSystem", "Показывать счетчик FPS"))
        self.thr_lbl_segm_2.setText(_translate("HandGestureRecognitionSystem", "Выбор доступной камеры"))
        self.startDetection_3.setText(_translate("HandGestureRecognitionSystem", "РЕЗУЛЬТАТЫ КЛАССИФИКАЦИИ НА ИТОГОВОМ ИЗОБРАЖЕНИИ В РАЗНЫХ ЦВЕТАХ"))
        self.thr_lbl_segm_3.setText(_translate("HandGestureRecognitionSystem", "ТОЛЬКО ПРИ ПРЕВЫШЕНИИ БУДЕТ ОТПРАВЛЯТЬСЯ JSON и ОТОБРАЖАТЬСЯ КАК РАСПОЗНАННЫЙ ЖЕСТ"))
        self.thr_lbl_segm_4.setText(_translate("HandGestureRecognitionSystem", "Выбор жеста включающего общее распознавание"))
        self.open_list_gestures.setText(_translate("HandGestureRecognitionSystem", "Открыть список жестов"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("HandGestureRecognitionSystem", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("HandGestureRecognitionSystem", "Tab 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("HandGestureRecognitionSystem", "Page"))
        self.startDetection_4.setText(_translate("HandGestureRecognitionSystem", "Открыть мониторинг"))


